{
  "version": 3,
  "sources": ["tab.js"],
  "sourcesContent": ["import { useElement, useProps } from './core/element.js';\nimport { convertCSSDuration } from './core/utils/CSSUtils.js';\nimport { Select } from './core/utils/select.js';\nimport './ripple.js';\nconst name = 's-tab';\nconst props = useProps({\n    mode: ['scrollable', 'fixed'],\n    $value: ''\n});\nconst style = `:host{display:flex;justify-content:flex-start;position:relative;background:var(--s-color-surface, #F8F9FB);color:var(--s-color-on-surface-variant, #40484C)}:host:before{content:\"\";position:absolute;width:100%;border-bottom:solid 1px var(--s-color-surface-variant, #DCE4E8);bottom:0;left:0}.container{display:flex;justify-content:flex-start;align-items:center;position:relative;scrollbar-width:none;overflow-x:auto}.container::-webkit-scrollbar{display:none}:host([mode=fixed]) .container{overflow:hidden;width:100%}::slotted(s-tab-item){flex-shrink:0;flex-basis:auto}:host([mode=fixed]) ::slotted(s-tab-item){flex-basis:100%;flex-shrink:1}`\nconst template = `<div class=\"container\" part=\"container\"><slot></slot></div>`\nexport class Tab extends useElement({\n    style, template, props,\n    setup(shadowRoot) {\n        const slot = shadowRoot.querySelector('slot');\n        const container = shadowRoot.querySelector('.container');\n        const select = new Select({ context: this, class: TabItem, slot });\n        const computedStyle = getComputedStyle(this);\n        const getAnimateOptions = () => {\n            const easing = computedStyle.getPropertyValue('--s-motion-easing-standard') || \"cubic-bezier(0.2, 0, 0, 1.0)\" /* Theme.motionEasingStandard */;\n            const duration = computedStyle.getPropertyValue('--s-motion-duration-medium4') || \"400ms\" /* Theme.motionDurationMedium4 */;\n            return { easing: easing, duration: convertCSSDuration(duration) };\n        };\n        select.onUpdate = (old) => {\n            if (select.select && container.scrollWidth !== container.offsetWidth) {\n                const left = (select.select.offsetLeft - container.offsetLeft) - (container.offsetWidth / 2 - select.select.offsetWidth / 2);\n                container.scrollTo({ left, behavior: 'smooth' });\n            }\n            if (!old || !select.select || !this.isConnected)\n                return;\n            const oldRect = old.shadowRoot.querySelector('.indicator').getBoundingClientRect();\n            const indicator = select.select.shadowRoot?.querySelector('.indicator');\n            const rect = indicator.getBoundingClientRect();\n            const offset = oldRect.left - rect.left;\n            indicator.style.transform = `translateX(${rect.left > oldRect.left ? offset : Math.abs(offset)}px)`;\n            indicator.style.width = `${oldRect.width}px`;\n            const animation = indicator.animate([{ transform: `translateX(0)`, width: `${rect.width}px` }], getAnimateOptions());\n            animation.onfinish = animation.oncancel = animation.onremove = () => {\n                indicator.style.removeProperty('transform');\n                indicator.style.removeProperty('width');\n            };\n        };\n        return {\n            expose: {\n                get options() {\n                    return select.list;\n                },\n                get selectedIndex() {\n                    return select.selectedIndex;\n                },\n            },\n            value: {\n                get: () => select.value,\n                set: (value) => select.value = value\n            }\n        };\n    }\n}) {\n}\nconst itemName = 's-tab-item';\nconst itemProps = useProps({\n    selected: false,\n    $value: ''\n});\nconst itemStyle = `:host{display:flex;align-items:center;justify-content:center;min-height:48px;position:relative;cursor:pointer;font-size:.875rem;font-weight:500;text-transform:capitalize;padding:0 16px}:host([selected=true]){color:var(--s-color-primary, #006782)}.container{display:flex;justify-content:center;align-items:center;flex-direction:column;position:relative;min-height:inherit}.indicator{position:absolute;bottom:0;left:0;height:3px;width:100%;background:var(--s-color-primary, #006782);border-radius:1.5px 1.5px 0 0;opacity:0}:host([selected=true]) .indicator{opacity:1}.text{display:flex;align-items:center;line-height:1}::slotted([slot=icon]){width:24px;height:24px;color:currentColor;fill:currentColor;margin:10px 0}::slotted([slot=text]){white-space:nowrap;text-overflow:ellipsis;line-height:1}.icon ::slotted([slot=text]){margin-top:-6px;height:26px}::slotted([slot=badge]){margin-left:4px}::slotted([slot=badge]:not(:empty)){width:auto}.icon ::slotted([slot=badge]){position:absolute;right:0;width:8px;top:12px;margin-left:0}`\nconst itemTemplate = `<div class=\"container\" part=\"container\"><slot name=\"icon\"></slot><div class=\"text\" part=\"text\"><slot name=\"text\"></slot><slot name=\"badge\"></slot></div><div class=\"indicator\" part=\"indicator\"></div></div><s-ripple attached=\"true\" part=\"ripple\"></s-ripple>`\nexport class TabItem extends useElement({\n    style: itemStyle,\n    template: itemTemplate,\n    props: itemProps,\n    setup(shadowRoot) {\n        const container = shadowRoot.querySelector('.container');\n        shadowRoot.querySelector('[name=icon]').addEventListener('slotchange', (event) => {\n            const slot = event.target;\n            const length = slot.assignedElements().length;\n            container.classList[length > 0 ? 'add' : 'remove']('icon');\n        });\n        this.addEventListener('click', () => {\n            if (!(this.parentNode instanceof Tab) || this.selected)\n                return;\n            this.dispatchEvent(new Event(`${name}:select`, { bubbles: true }));\n        });\n        return {\n            selected: () => {\n                if (!(this.parentNode instanceof Tab))\n                    return;\n                this.dispatchEvent(new Event(`${name}:update`, { bubbles: true }));\n            },\n        };\n    }\n}) {\n}\nTab.define(name);\nTabItem.define(itemName);\n"],
  "mappings": "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",
  "names": ["useElement", "useProps", "convertCSSDuration", "Select", "name", "props", "style", "template", "Tab", "shadowRoot", "slot", "container", "select", "TabItem", "computedStyle", "getAnimateOptions", "easing", "duration", "old", "left", "oldRect", "indicator", "rect", "offset", "animation", "value", "itemName", "itemProps", "itemStyle", "itemTemplate", "event", "length"]
}
