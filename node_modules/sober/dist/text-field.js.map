{
  "version": 3,
  "sources": ["text-field.js"],
  "sourcesContent": ["import { useElement, useProps } from './core/element.js';\nconst name = 's-text-field';\nconst props = useProps({\n    $label: '',\n    $placeholder: '',\n    disabled: false,\n    type: ['text', 'number', 'password', 'multiline'],\n    error: false,\n    $value: '',\n    $maxLength: -1,\n    readOnly: false,\n    multiLine: false,\n    countered: false\n});\nconst style = `:host{display:inline-grid;vertical-align:middle;font-size:.875rem;min-height:48px;width:280px;color:var(--s-color-on-surface, #191C1E);--text-field-border-radius: 4px;--text-field-border-color: var(--s-color-outline, #70787D);--text-field-padding: 16px;--text-field-padding-top: var(--text-field-padding);--text-field-padding-bottom: var(--text-field-padding);--text-field-padding-left: var(--text-field-padding);--text-field-padding-right: var(--text-field-padding)}:host([disabled=true]){pointer-events:none;opacity:.38}:host([type=multiline]){line-height:24px;--text-field-padding-top: 12px;--text-field-padding-bottom: 12px}.field{display:block;min-height:inherit;font-size:inherit;--field-border-radius: var(--text-field-border-radius);--field-border-color: var(--text-field-border-color);--field-padding: var(--text-field-padding);--field-padding-top: var(--text-field-padding-top);--field-padding-bottom: var(--text-field-padding-bottom);--field-padding-left: var(--text-field-padding-left);--field-padding-right: var(--text-field-padding-right)}:host([error=true]) .field{--s-color-primary: var(--s-color-error, #BA1A1A);--field-border-color: var(--s-color-error, #BA1A1A);--field-border-width: 2px}:host([type=multiline]) .label{height:fit-content;padding-top:var(--text-field-padding-top);padding-bottom:var(--text-field-padding-bottom)}.view{flex-grow:1;padding:0;flex-direction:column;position:relative}input,textarea{border:none;height:100%;width:100%;padding-left:var(--field-padding-left);padding-right:var(--field-padding-right);background:none;outline:none;font-size:inherit;color:inherit;box-sizing:border-box;line-height:inherit;font-family:inherit;caret-color:var(--s-color-primary, #006782);display:block;-moz-appearance:textfield}textarea{position:absolute;left:0;top:0;width:100%;height:100%;resize:none;scrollbar-width:none;display:none}input::placeholder,textarea::placeholder{color:var(--text-field-border-color)}input::selection,textarea::selection{background:var(--s-color-primary, #006782);color:var(--s-color-on-primary, #ffffff)}:host([type=multiline]) input,.text>.counter{display:none}textarea,.shadow{line-height:inherit;word-wrap:break-word;word-break:break-all;white-space:pre-wrap;box-sizing:border-box;padding-top:var(--text-field-padding-top);padding-bottom:var(--text-field-padding-bottom);padding-left:var(--text-field-padding-left);padding-right:var(--text-field-padding-right)}:host([type=multiline]) :is(textarea,.shadow),:host([countered=true]) .counter{display:block}input::-webkit-outer-spin-button,input::-webkit-inner-spin-button{-webkit-appearance:none}input:is(::-ms-clear,::-ms-reveal){display:none}.shadow{pointer-events:none;display:none;opacity:0;width:100%;min-height:100%}.shadow:after{content:\" \"}.text{display:flex;align-items:flex-end;width:100%;box-sizing:border-box;font-size:.75rem;color:var(--text-field-border-color)}:host([error=true]) .text{color:var(--s-color-error, #BA1A1A)}.text>slot[name=text]{display:block;flex-grow:1}.text>.counter,::slotted([slot=text]){margin-top:8px}.toggle{flex-direction:column}.toggle,.toggle>s-ripple{display:flex;justify-content:center;align-items:center}.toggle svg{pointer-events:none}.toggle>s-ripple{display:none}.toggle>.up,.toggle>.down{height:16px;width:24px;border-radius:4px;margin-right:8px;margin-left:-4px}.toggle>.visibility{width:40px;height:40px;border-radius:50%;margin:0 4px 0 -4px}.toggle>.visibility>svg{display:none}:host([type=number]) .toggle>:is(.up,.down),:host([type=password]) :is(.toggle>.visibility,.toggle:not(.show-password)>.visibility>.on,.toggle.show-password>.visibility>.off){display:flex}svg,::slotted(svg){fill:var(--s-color-on-surface-variant, #40484C);height:24px;width:24px;flex-shrink:0}::slotted(s-icon-button[slot=start]){margin-left:4px;margin-right:calc(var(--text-field-border-radius) - var(--text-field-padding-left) + 4px)}::slotted(s-icon-button[slot=end]){margin-right:4px;margin-left:calc(var(--text-field-border-radius) - var(--text-field-padding-right) + 4px)}::slotted(:is(s-icon[slot=start],svg[slot=start])){margin-left:12px;margin-right:calc(var(--text-field-border-radius) - var(--text-field-padding-left) + 8px)}::slotted(:is(s-icon[slot=end],svg[slot=end])){margin-right:12px;margin-left:calc(var(--text-field-border-radius) - var(--text-field-padding-right) + 8px)}`\nconst template = `<s-field class=\"field\" fixed=\"false\"><div slot=\"label\" class=\"label\"></div><div class=\"view\"><div class=\"shadow\"></div><input type=\"text\" part=\"input\"> <textarea part=\"textarea\"></textarea></div><slot slot=\"start\" name=\"start\"></slot><slot slot=\"end\" name=\"end\"><div class=\"toggle\" part=\"toggle\"><s-ripple class=\"up\"><svg viewBox=\"0 -960 960 960\"><path d=\"m280-400 200-200 200 200H280Z\"></path></svg></s-ripple><s-ripple class=\"down\"><svg viewBox=\"0 -960 960 960\"><path d=\"M480-360 280-560h400L480-360Z\"></path></svg></s-ripple><s-ripple class=\"visibility\"><svg viewBox=\"0 -960 960 960\" class=\"on\"><path d=\"M480-320q75 0 127.5-52.5T660-500q0-75-52.5-127.5T480-680q-75 0-127.5 52.5T300-500q0 75 52.5 127.5T480-320Zm0-72q-45 0-76.5-31.5T372-500q0-45 31.5-76.5T480-608q45 0 76.5 31.5T588-500q0 45-31.5 76.5T480-392Zm0 192q-146 0-266-81.5T40-500q54-137 174-218.5T480-800q146 0 266 81.5T920-500q-54 137-174 218.5T480-200Zm0-300Zm0 220q113 0 207.5-59.5T832-500q-50-101-144.5-160.5T480-720q-113 0-207.5 59.5T128-500q50 101 144.5 160.5T480-280Z\"></path></svg> <svg viewBox=\"0 -960 960 960\" class=\"off\"><path d=\"m644-428-58-58q9-47-27-88t-93-32l-58-58q17-8 34.5-12t37.5-4q75 0 127.5 52.5T660-500q0 20-4 37.5T644-428Zm128 126-58-56q38-29 67.5-63.5T832-500q-50-101-143.5-160.5T480-720q-29 0-57 4t-55 12l-62-62q41-17 84-25.5t90-8.5q151 0 269 83.5T920-500q-23 59-60.5 109.5T772-302Zm20 246L624-222q-35 11-70.5 16.5T480-200q-151 0-269-83.5T40-500q21-53 53-98.5t73-81.5L56-792l56-56 736 736-56 56ZM222-624q-29 26-53 57t-41 67q50 101 143.5 160.5T480-280q20 0 39-2.5t39-5.5l-36-38q-11 3-21 4.5t-21 1.5q-75 0-127.5-52.5T300-500q0-11 1.5-21t4.5-21l-84-82Zm319 93Zm-151 75Z\"></path></svg></s-ripple></div></slot></s-field><div class=\"text\" part=\"text\"><slot name=\"text\"></slot><div class=\"counter\" part=\"counter\"></div></div>`\nexport class TextField extends useElement({\n    style, template, props,\n    setup(shadowRoot) {\n        const field = shadowRoot.querySelector('.field');\n        const label = shadowRoot.querySelector('.label');\n        const textAreaShadow = shadowRoot.querySelector('.shadow');\n        const counter = shadowRoot.querySelector('.counter');\n        const toggle = shadowRoot.querySelector('.toggle');\n        const inputs = {\n            input: shadowRoot.querySelector('input'),\n            textarea: shadowRoot.querySelector('textarea')\n        };\n        const getInput = () => this.type === 'multiline' ? inputs.textarea : inputs.input;\n        const onCounter = () => {\n            if (!this.countered)\n                return;\n            counter.textContent = `${getInput().value.length}/${this.maxLength}`;\n        };\n        const onChange = () => this.dispatchEvent(new Event('change'));\n        const onFocus = () => {\n            field.fixed = true;\n            field.focused = true;\n        };\n        const onBlur = () => {\n            field.focused = false;\n            if (getInput().value === '' && !this.error)\n                field.fixed = false;\n        };\n        inputs.input.oninput = onCounter;\n        inputs.input.onfocus = onFocus;\n        inputs.input.onblur = onBlur;\n        inputs.input.onchange = onChange;\n        inputs.textarea.onfocus = onFocus;\n        inputs.textarea.onblur = onBlur;\n        inputs.textarea.onchange = onChange;\n        inputs.textarea.oninput = () => {\n            textAreaShadow.textContent = inputs.textarea.value;\n            onCounter();\n        };\n        const setNumber = (num) => {\n            this.value = `${parseInt(this.value || '0') + num}`;\n            this.dispatchEvent(new Event('input'));\n            this.dispatchEvent(new Event('change'));\n        };\n        shadowRoot.querySelector('.up').onclick = () => setNumber(1);\n        shadowRoot.querySelector('.down').onclick = () => setNumber(-1);\n        shadowRoot.querySelector('.visibility').onclick = () => {\n            inputs.input.type = toggle.classList.contains('show-password') ? 'password' : 'text';\n            toggle.classList.toggle('show-password');\n        };\n        return {\n            expose: {\n                get native() {\n                    return getInput();\n                }\n            },\n            label: (value) => label.textContent = value,\n            type: (value, old) => {\n                inputs.input.type = value === 'password' ? (toggle.classList.contains('show-password') ? 'text' : 'password') : value;\n                if (value === 'multiline') {\n                    inputs.textarea.value = inputs.input.value;\n                    textAreaShadow.textContent = inputs.input.value;\n                }\n                if (old === 'multiline')\n                    inputs.input.value = inputs.textarea.value;\n            },\n            error: (value) => {\n                if (value)\n                    return field.fixed = true;\n                if (getInput().value === '')\n                    field.fixed = false;\n            },\n            value: {\n                get: () => getInput().value,\n                set: (value) => {\n                    inputs.input.value = value;\n                    inputs.textarea.value = value;\n                    textAreaShadow.textContent = value;\n                    onCounter();\n                    if (!this.error)\n                        field.fixed = value !== '';\n                }\n            },\n            placeholder: (value) => {\n                inputs.input.placeholder = value;\n                inputs.textarea.placeholder = value;\n            },\n            readOnly: (value) => {\n                inputs.input.readOnly = value;\n                inputs.textarea.readOnly = value;\n            },\n            disabled: (value) => {\n                inputs.input.disabled = value;\n                inputs.textarea.disabled = value;\n            },\n            maxLength: (value) => {\n                inputs.input.maxLength = value;\n                inputs.textarea.maxLength = value;\n                onCounter();\n            },\n            multiLine: (value) => this.type = value ? 'multiline' : 'text',\n            countered: onCounter\n        };\n    }\n}) {\n}\nTextField.define(name);\n"],
  "mappings": "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",
  "names": ["useElement", "useProps", "name", "props", "style", "template", "TextField", "shadowRoot", "field", "label", "textAreaShadow", "counter", "toggle", "inputs", "getInput", "onCounter", "onChange", "onFocus", "onBlur", "setNumber", "num", "value", "old"]
}
