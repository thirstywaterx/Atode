{
  "version": 3,
  "sources": ["date.js"],
  "sourcesContent": ["import { useElement, useProps } from './core/element.js';\nimport { dateFormat } from './core/utils/dateFormat.js';\nimport { Ripple } from './ripple.js';\nimport { I18n } from './core/i18n.js';\nconst i18n = new I18n({});\ni18n.list = {\n    zh: {\n        display: (date) => `${date.getFullYear()}\u5E74${date.getMonth() + 1}\u6708${date.getDate()}\u65E5 \u661F\u671F${i18n.list.zh.displayWeeks[date.getDay()]}`,\n        displayMonth: (date) => `${date.getFullYear()}\u5E74`,\n        displayWeeks: ['\u65E5', '\u4E00', '\u4E8C', '\u4E09', '\u56DB', '\u4E94', '\u516D']\n    },\n    en: {\n        display: (date) => `${['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'][date.getDay()]}, Jan ${date.getDate()}`,\n        displayMonth: (date) => `${['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'][date.getMonth()]} ${date.getFullYear()}`,\n        displayWeeks: ['S', 'M', 'T', 'W', 'T', 'F', 'S']\n    }\n};\nconst name = 's-date';\nconst props = useProps({\n    $value: '',\n    $locale: '',\n    $max: '2099-12-31',\n    $min: '1900-01-01',\n});\nconst style = `:host{display:inline-block;vertical-align:middle;border-radius:8px;font-size:.875rem;max-width:360px;overflow:hidden;box-sizing:border-box;border:solid 1px var(--s-color-surface-variant, #DCE4E8);background:var(--s-color-surface-container-low, #F2F4F5);color:var(--s-color-on-surface, #191C1E)}.button,.icon-button{display:flex;justify-content:center;align-items:center;height:36px;box-sizing:border-box;font-size:.8125rem;color:var(--s-color-on-surface-variant, #40484C)}.icon-button{width:36px;border-radius:50%}.button{border-radius:18px;height:36px;padding:0 12px}svg{width:24px;fill:currentColor;box-sizing:border-box}.header{padding:24px 24px 16px;font-size:1.25rem;border-bottom:solid 1px var(--s-color-surface-variant, #DCE4E8);background:var(--s-color-surface-container, #ECEEF0)}.container{display:flex;flex-direction:column;position:relative}.action{display:flex;align-items:center;justify-content:space-between;padding:12px 16px}.action>.year>svg{margin:0 -8px 0 2px;padding:1px}.action>.toggle{display:flex}.years{display:flex;flex-wrap:wrap;overflow:auto;gap:4px;column-gap:6px;padding:0 16px 16px;margin-top:-12px;max-height:280px;counter-reset:year-counter 1899}.years>.item{counter-increment:year-counter;flex-grow:1}.years>.item:before{content:counter(year-counter)}.weeks{display:flex;padding:0 16px;font-size:.8125rem;color:var(--s-color-outline, #70787D)}.weeks>.item,.days>.item{width:calc(100% / 7);display:inline-flex;justify-content:center}.days{padding:16px;display:flex;flex-wrap:wrap}.days>.overflow~.item{display:none}.days>.item>s-ripple{margin:2px}.days>.checked>s-ripple,.years>.checked{pointer-events:none;background:var(--s-color-primary, #006782);color:var(--s-color-on-primary, #ffffff)}.container:not(.show-years) .years,.show-years :is(.weeks,.days,.action>.toggle){display:none}`\nconst templateList = {\n    years: [],\n    weeks: [],\n    days: [],\n};\nfor (let i = 0; i < 200; i++) {\n    if (i < 7)\n        templateList.weeks.push(`<div class=\"item\"></div>`);\n    if (i < 31)\n        templateList.days.push(`<div class=\"item\"><s-ripple class=\"icon-button\">${i + 1}</s-ripple></div>`);\n    templateList.years.push(`<s-ripple class=\"button item\"></s-ripple>`);\n}\nconst template = `<div class=\"header\" part=\"header\"><slot name=\"headline\"></slot><span></span></div><div class=\"container\" part=\"container\"><div class=\"action\"><s-ripple class=\"button year\" slot=\"trigger\"><span></span> <svg viewBox=\"0 -960 960 960\"><path d=\"M480-360 280-560h400L480-360Z\"></path></svg></s-ripple><div class=\"toggle\"><s-ripple class=\"icon-button prev\" part=\"prev-button\"><svg viewBox=\"0 -960 960 960\"><path d=\"M560-240 320-480l240-240 56 56-184 184 184 184-56 56Z\"></path></svg></s-ripple><s-ripple class=\"icon-button next\" part=\"next-button\"><svg viewBox=\"0 -960 960 960\"><path d=\"M504-480 320-664l56-56 240 240-240 240-56-56 184-184Z\"></path></svg></s-ripple></div></div><s-scroll-view class=\"years\">${templateList.years.join('')}</s-scroll-view><div class=\"weeks\">${templateList.weeks.join('')}</div><div class=\"days\">${templateList.days.join('')}</div></div>`\nclass DateState {\n    yearSelect;\n    daySelect;\n    dayOverflow;\n    date;\n    min;\n    max;\n    constructor(date, min, max) {\n        this.date = typeof date === 'string' ? new Date(date) : date;\n        this.min = new Date(min);\n        this.max = new Date(max);\n    }\n}\nconst getMonthMaxDate = (year, month) => {\n    const date = new Date(year, month + 1, 1);\n    date.setDate(date.getDate() - 1);\n    return date.getDate();\n};\nconst addLocale = (name, locale) => {\n    i18n.addItem(name, locale);\n};\nconst setLocale = (name) => {\n    i18n.setLocale(name);\n};\nclass DateElement extends useElement({\n    style, template, props, methods: { addLocale, setLocale },\n    setup(shadowRoot) {\n        const container = shadowRoot.querySelector('.container');\n        const headline = shadowRoot.querySelector('.header>span');\n        const yearTogggle = shadowRoot.querySelector('.action>.year');\n        const prev = shadowRoot.querySelector('.action>.toggle>.prev');\n        const next = shadowRoot.querySelector('.action>.toggle>.next');\n        const years = shadowRoot.querySelector('.years');\n        const weeks = shadowRoot.querySelector('.weeks');\n        const days = shadowRoot.querySelector('.days');\n        const state = new DateState(this.value || new Date(), this.min, this.max);\n        const setText = () => {\n            const displayHeadline = i18n.getItem(this.locale).display;\n            headline.textContent = displayHeadline(state.date);\n            const displayMotnh = i18n.getItem(this.locale).displayMonth;\n            yearTogggle.children[0].textContent = displayMotnh(state.date);\n        };\n        const setWeekText = () => {\n            const displayWeeks = i18n.getItem(this.locale).displayWeeks;\n            weeks.childNodes.forEach((item, index) => item.textContent = displayWeeks[index]);\n        };\n        const update = () => {\n            const weekDay = new Date(state.date.getFullYear(), state.date.getMonth(), 1).getDay();\n            days.children[0].setAttribute('style', `margin-left: calc((100% / 7) * ${weekDay})`);\n            const monthDay = new Date(state.date.getFullYear(), state.date.getMonth() + 1, 0).getDate();\n            state.dayOverflow?.classList.remove('overflow');\n            state.dayOverflow = days.children[monthDay - 1];\n            state.dayOverflow.classList.add('overflow');\n            state.yearSelect?.classList.remove('checked');\n            state.yearSelect = years.children[state.date.getFullYear() - state.min.getFullYear()];\n            state.yearSelect.classList.add('checked');\n            state.daySelect?.classList.remove('checked');\n            state.daySelect = days.children[state.date.getDate() - 1];\n            state.daySelect.classList.add('checked');\n            container.style.removeProperty('height');\n        };\n        const setYearCount = () => {\n            const count = state.max.getFullYear() - state.min.getFullYear();\n            years.innerHTML = '';\n            years.style.counterReset = `year-counter ${state.min.getFullYear() - 1}`;\n            const fragment = document.createDocumentFragment();\n            for (let i = 0; i <= count; i++) {\n                const ripple = new Ripple();\n                ripple.classList.add('button', 'item');\n                fragment.appendChild(ripple);\n            }\n            years.appendChild(fragment);\n            update();\n        };\n        const setValue = (y, m, d) => {\n            this.value = dateFormat(new Date(y, m, d));\n            this.dispatchEvent(new Event('change'));\n        };\n        yearTogggle.onclick = () => {\n            const h = container.offsetHeight;\n            container.classList.toggle('show-years');\n            if (container.classList.contains('show-years')) {\n                container.style.height = `${h}px`;\n                state.yearSelect && years.scrollTo({ top: state.yearSelect.offsetTop - (years.offsetHeight / 2) + (state.yearSelect.offsetHeight / 2) });\n                return;\n            }\n        };\n        prev.onclick = () => {\n            const prevMaxDate = getMonthMaxDate(state.date.getFullYear(), state.date.getMonth() - 1);\n            const day = Math.min(state.date.getDate(), prevMaxDate);\n            setValue(state.date.getFullYear(), state.date.getMonth() - 1, day);\n        };\n        next.onclick = () => {\n            const prevMaxDate = getMonthMaxDate(state.date.getFullYear(), state.date.getMonth() + 1);\n            const day = Math.min(state.date.getDate(), prevMaxDate);\n            setValue(state.date.getFullYear(), state.date.getMonth() + 1, day);\n        };\n        years.onclick = (e) => {\n            if (!(e.target instanceof Ripple))\n                return;\n            container.classList.remove('show-years');\n            const index = Array.from(years.children).indexOf(e.target) + state.min.getFullYear();\n            setValue(index, state.date.getMonth(), state.date.getDate());\n        };\n        days.onclick = (e) => {\n            if (!(e.target instanceof Ripple))\n                return;\n            const index = Array.from(days.children).indexOf(e.target.parentElement) + 1;\n            setValue(state.date.getFullYear(), state.date.getMonth(), index);\n        };\n        const updateText = () => {\n            setText();\n            setWeekText();\n        };\n        update();\n        updateText();\n        return {\n            onMounted: () => i18n.updates.set(this, updateText),\n            onUnmounted: () => i18n.updates.delete(this),\n            min: (value) => {\n                const min = new Date(value);\n                if (isNaN(min.getTime()) || min.getTime() > state.date.getTime())\n                    throw Error('invalid min date');\n                state.min = min;\n                setYearCount();\n            },\n            max: (value) => {\n                const max = new Date(value);\n                if (isNaN(max.getTime()) || max.getTime() < state.date.getTime())\n                    throw Error('invalid max date');\n                state.max = max;\n                setYearCount();\n            },\n            value: {\n                get: () => dateFormat(state.date),\n                set: (value) => {\n                    const val = new Date(value);\n                    if (isNaN(val.getTime()) || val.getTime() < state.min.getTime() || val.getTime() > state.max.getTime())\n                        throw Error('invalid date');\n                    state.date = val;\n                    setText();\n                    update();\n                }\n            },\n            locale: updateText,\n        };\n    }\n}) {\n}\nDateElement.define(name);\nexport { DateElement as Date };\n"],
  "mappings": "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",
  "names": ["useElement", "useProps", "dateFormat", "Ripple", "I18n", "i18n", "date", "name", "props", "style", "templateList", "i", "template", "DateState", "min", "max", "getMonthMaxDate", "year", "month", "addLocale", "locale", "setLocale", "DateElement", "shadowRoot", "container", "headline", "yearTogggle", "prev", "next", "years", "weeks", "days", "state", "setText", "displayHeadline", "displayMotnh", "setWeekText", "displayWeeks", "item", "index", "update", "weekDay", "monthDay", "setYearCount", "count", "fragment", "ripple", "setValue", "y", "m", "d", "h", "prevMaxDate", "day", "e", "updateText", "value", "val"]
}
