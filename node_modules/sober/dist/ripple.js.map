{
  "version": 3,
  "sources": ["ripple.js"],
  "sourcesContent": ["import { useElement, useProps } from './core/element.js';\nimport { mediaQueryList } from './core/utils/mediaQuery.js';\nimport { convertCSSDuration } from './core/utils/CSSUtils.js';\nconst name = 's-ripple';\nconst props = useProps({\n    centered: false,\n    attached: false\n});\nconst style = `:host{display:inline-block;vertical-align:middle;position:relative;cursor:pointer}:host([attached=true]),.container,.container:before,.ripple{position:absolute;inset:0;width:100%;height:100%;pointer-events:none;border-radius:inherit}.container{overflow:hidden}.container:before{content:\"\";opacity:0;background:var(--ripple-color, currentColor);transition:opacity var(--s-motion-duration-short4, .1s) var(--s-motion-easing-standard, cubic-bezier(.2, 0, 0, 1))}.container.hover:before{opacity:var(--ripple-hover-opacity, .12)}.ripple{opacity:0;border-radius:50%;background:currentColor;filter:blur(12px) opacity(var(--ripple-opacity, .18))}`\nconst template = `<slot></slot><div class=\"container\" part=\"container\"><div class=\"ripple\"></div></div>`\nexport class Ripple extends useElement({\n    style, template, props,\n    setup(shadowRoot) {\n        const container = shadowRoot.querySelector('.container');\n        const ripple = shadowRoot.querySelector('.ripple');\n        const computedStyle = getComputedStyle(this);\n        const getAnimateOptions = () => {\n            const easing = computedStyle.getPropertyValue('--s-motion-easing-standard') || \"cubic-bezier(0.2, 0, 0, 1.0)\" /* Theme.motionEasingStandard */;\n            const duration = computedStyle.getPropertyValue('--s-motion-duration-long4') || \"600ms\" /* Theme.motionDurationLong4 */;\n            const shortDuration = computedStyle.getPropertyValue('--s-motion-duration-short4') || \"200ms\" /* Theme.motionDurationShort4 */;\n            return { easing: easing, duration: convertCSSDuration(duration), shortDuration: convertCSSDuration(shortDuration) };\n        };\n        const hover = () => mediaQueryList.pointerFine.matches && container.classList.add('hover');\n        const unHover = () => mediaQueryList.pointerFine.matches && container.classList.remove('hover');\n        const state = { parentNode: null, pressed: false };\n        const run = (event) => {\n            const { offsetWidth, offsetHeight } = this;\n            let size = Math.sqrt(offsetWidth ** 2 + offsetHeight ** 2);\n            const coordinate = { x: '50%', y: '50%' };\n            if (!this.centered) {\n                const { left, top } = this.getBoundingClientRect();\n                const x = event.clientX - left;\n                const y = event.clientY - top;\n                const h = offsetHeight / 2;\n                const w = offsetWidth / 2;\n                const edgeW = (Math.abs(h - y) + h) * 2;\n                const edgeH = (Math.abs(w - x) + w) * 2;\n                size = Math.sqrt(edgeW ** 2 + edgeH ** 2);\n                coordinate.x = `${x}px`;\n                coordinate.y = `${y}px`;\n            }\n            let newRipple = ripple;\n            let callback = () => { };\n            if (state.pressed) {\n                newRipple = ripple.cloneNode();\n                container.appendChild(newRipple);\n                callback = () => newRipple.remove();\n            }\n            else {\n                state.pressed = true;\n                callback = () => state.pressed = false;\n            }\n            const parent = (state.parentNode ?? this);\n            const animateOptions = getAnimateOptions();\n            parent.setAttribute('pressed', '');\n            const animation = newRipple.animate({\n                opacity: [1, 1],\n                width: [`${size}px`, `${size}px`],\n                height: [`${size}px`, `${size}px`],\n                transform: ['translate(-50%, -50%) scale(0)', 'translate(-50%, -50%) scale(1)'],\n                left: [coordinate.x, coordinate.x],\n                top: [coordinate.y, coordinate.y],\n            }, { ...animateOptions, fill: 'forwards' });\n            const remove = () => {\n                parent.removeAttribute('pressed');\n                const time = Number(animation.currentTime);\n                const diff = animateOptions.duration - animateOptions.shortDuration;\n                const duration = time > diff ? animateOptions.shortDuration : animateOptions.duration - time;\n                newRipple.animate({ opacity: [1, 0] }, { duration, easing: animateOptions.easing, fill: 'forwards' }).finished.then(callback);\n            };\n            return remove;\n        };\n        const down = async (event) => {\n            if (event.button !== 0)\n                return;\n            const data = {};\n            if (event.pointerType === 'mouse') {\n                document.addEventListener('pointerup', run(event), { once: true });\n                return;\n            }\n            let remove;\n            //\u4F18\u5148\u54CD\u5E94\u89E6\u5C4F\u6EDA\u52A8\n            data.timer = setTimeout(() => {\n                remove = run(event);\n                document.removeEventListener('touchmove', move);\n                if (data.upper)\n                    remove();\n            }, 50);\n            document.addEventListener('touchend', () => {\n                if (!remove)\n                    return data.upper = true;\n                remove();\n            }, { once: true });\n            const move = () => clearTimeout(data.timer);\n            document.addEventListener('touchmove', move, { once: true });\n        };\n        const add = (target) => {\n            target.addEventListener('mouseenter', hover);\n            target.addEventListener('mouseleave', unHover);\n            target.addEventListener('wheel', unHover, { passive: true });\n            target.addEventListener('pointerdown', down);\n        };\n        const remove = () => {\n            if (!state.parentNode)\n                return;\n            state.parentNode.removeEventListener('mouseenter', hover);\n            state.parentNode.removeEventListener('mouseleave', unHover);\n            state.parentNode.removeEventListener('wheel', unHover);\n            state.parentNode.removeEventListener('pointerdown', down);\n            state.parentNode = null;\n        };\n        add(this);\n        return {\n            onMounted: () => {\n                if (this.attached && this.parentNode) {\n                    state.parentNode = (this.parentNode instanceof ShadowRoot ? this.parentNode.host : this.parentNode);\n                    add(state.parentNode);\n                }\n            },\n            onUnmounted: () => this.attached && remove(),\n            attached: (value) => {\n                if (!this.isConnected)\n                    return;\n                if (!value)\n                    return remove();\n                const target = (this.parentNode instanceof ShadowRoot ? this.parentNode.host : this.parentNode);\n                add(target);\n            }\n        };\n    }\n}) {\n}\nRipple.define(name);\n"],
  "mappings": "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",
  "names": ["useElement", "useProps", "mediaQueryList", "convertCSSDuration", "name", "props", "style", "template", "Ripple", "shadowRoot", "container", "ripple", "computedStyle", "getAnimateOptions", "easing", "duration", "shortDuration", "hover", "unHover", "state", "run", "event", "offsetWidth", "offsetHeight", "size", "coordinate", "left", "top", "x", "y", "h", "w", "edgeW", "edgeH", "newRipple", "callback", "parent", "animateOptions", "animation", "time", "diff", "down", "data", "remove", "move", "add", "target", "value"]
}
