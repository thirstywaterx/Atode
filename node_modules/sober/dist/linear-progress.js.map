{
  "version": 3,
  "sources": ["linear-progress.js"],
  "sourcesContent": ["import { useElement, useProps } from './core/element.js';\nconst name = 's-linear-progress';\nconst props = useProps({\n    indeterminate: false,\n    animated: false,\n    $max: 100,\n    $value: 0\n});\nconst style = `:host{display:block;height:4px;color:var(--s-color-primary, #006782);border-radius:2px;overflow:hidden}:host([animated=true]) .known>.block{transition:transform var(--s-motion-duration-short4, .2s) var(--s-motion-easing-emphasized, cubic-bezier(.2, 0, 0, 1))}:host([indeterminate=true]) .known,.unknown{display:none}:host([indeterminate=true]) .unknown,.known{display:flex}.container{height:100%;border-radius:inherit;position:relative}.block{position:absolute;height:100%;border-radius:inherit;width:100%;left:0;top:0}.track{background:var(--s-color-secondary-container, #CFE6F1)}.indicator{background:currentColor}.indicator-dot{position:absolute;right:0;top:0;height:100%;aspect-ratio:1;-webkit-aspect-ratio:1;background:currentColor;border-radius:inherit}@keyframes unknown{0%{transform:translate(0)}to{transform:translate(150%)}}.unknown{justify-content:flex-end;gap:4px;animation:unknown 2s linear infinite}.unknown .block{position:static;flex-grow:1;width:100%;flex-shrink:0}.unknown .indicator{width:50%}`\nconst template = `<div class=\"container known\" part=\"container\"><div class=\"track block\" style=\"transform: translateX(0%)\" part=\"track\"></div><div class=\"indicator-dot\" part=\"indicator-dot\"></div><div class=\"indicator block\" style=\"transform: translateX(-100%)\" part=\"indicator\"></div></div><div class=\"container unknown\" part=\"container\"><div class=\"track block\" part=\"track\"></div><div class=\"indicator block\" part=\"indicator\"></div><div class=\"track block\" part=\"indicator\"></div></div>`\nexport class LinearProgress extends useElement({\n    style, template, props,\n    setup(shadowRoot) {\n        const track = shadowRoot.querySelector('.known>.track');\n        const indicator = shadowRoot.querySelector('.known>.indicator');\n        const render = () => {\n            const percentage = Math.min(this.value, this.max) / this.max * 100;\n            track.style.transform = `translateX(calc(${percentage}% + ${percentage === 0 ? 0 : 4}px))`;\n            indicator.style.transform = `translateX(${percentage - 100}%)`;\n        };\n        return {\n            max: render,\n            value: render\n        };\n    }\n}) {\n}\nLinearProgress.define(name);\n"],
  "mappings": "AAAA,OAAS,cAAAA,EAAY,YAAAC,MAAgB,oBACrC,MAAMC,EAAO,oBACPC,EAAQF,EAAS,CACnB,cAAe,GACf,SAAU,GACV,KAAM,IACN,OAAQ,CACZ,CAAC,EACKG,EAAQ,u/BACRC,EAAW,0dACV,MAAMC,UAAuBN,EAAW,CAC3C,MAAAI,EAAO,SAAAC,EAAU,MAAAF,EACjB,MAAMI,EAAY,CACd,MAAMC,EAAQD,EAAW,cAAc,eAAe,EAChDE,EAAYF,EAAW,cAAc,mBAAmB,EACxDG,EAAS,IAAM,CACjB,MAAMC,EAAa,KAAK,IAAI,KAAK,MAAO,KAAK,GAAG,EAAI,KAAK,IAAM,IAC/DH,EAAM,MAAM,UAAY,mBAAmBG,CAAU,OAAOA,IAAe,EAAI,EAAI,CAAC,OACpFF,EAAU,MAAM,UAAY,cAAcE,EAAa,GAAG,IAC9D,EACA,MAAO,CACH,IAAKD,EACL,MAAOA,CACX,CACJ,CACJ,CAAC,CAAE,CACH,CACAJ,EAAe,OAAOJ,CAAI",
  "names": ["useElement", "useProps", "name", "props", "style", "template", "LinearProgress", "shadowRoot", "track", "indicator", "render", "percentage"]
}
