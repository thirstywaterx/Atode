{
  "version": 3,
  "sources": ["navigation.js"],
  "sourcesContent": ["import { useElement, useProps } from './core/element.js';\nimport { Select } from './core/utils/select.js';\nimport './ripple.js';\nconst name = 's-navigation';\nconst props = useProps({\n    mode: ['bottom', 'rail'],\n    $value: ''\n});\nconst style = `:host{display:flex;justify-content:center;align-items:center;overflow:hidden;background:var(--s-color-surface, #F8F9FB);box-shadow:var(--s-elevation-level2, 0 2px 4px -1px rgba(0, 0, 0, .2), 0 4px 5px 0 rgba(0, 0, 0, .14), 0 1px 10px 0 rgba(0, 0, 0, .12));position:relative;padding-bottom:env(safe-area-inset-bottom)}:host([mode=rail]){flex-direction:column;justify-content:flex-start;width:80px;box-shadow:none;height:100%;background:none;padding-bottom:0}::slotted(s-navigation-item){height:64px}:host([mode=rail]) ::slotted(s-navigation-item){height:72px}:host([mode=rail]) ::slotted(s-icon-button[slot=start]){width:56px;height:56px;margin:16px 0 8px;border-radius:12px}:host([mode=rail]) ::slotted([slot=end]){flex-grow:1}`\nconst template = `<slot name=\"start\"></slot><slot id=\"slot\"></slot><slot name=\"end\"></slot>`\nexport class Navigation extends useElement({\n    style, template, props,\n    setup(shadowRoot) {\n        const slot = shadowRoot.querySelector('#slot');\n        const select = new Select({ context: this, class: NavigationItem, slot });\n        return {\n            expose: {\n                get options() {\n                    return select.list;\n                },\n                get selectedIndex() {\n                    return select.selectedIndex;\n                }\n            },\n            value: {\n                get: () => select.value,\n                set: (value) => select.value = value\n            }\n        };\n    }\n}) {\n}\nconst itemName = 's-navigation-item';\nconst itemProps = useProps({\n    selected: false,\n    $value: ''\n});\nconst itemStyle = `:host{display:flex;align-items:center;justify-content:center;flex-direction:column;cursor:pointer;position:relative;font-size:.75rem;font-weight:500;box-sizing:border-box;width:100%;max-width:80px;text-transform:capitalize;transition:color var(--s-motion-duration-short4, .4s) var(--s-motion-easing-emphasized, cubic-bezier(.2, 0, 0, 1));color:var(--s-color-on-surface, #191C1E)}:host([selected=true]){color:var(--s-color-primary, #006782)}.icon{position:relative;display:flex;justify-content:center;align-items:center;height:28px;width:48px;border-radius:14px;transition:background-color var(--s-motion-duration-short4, .4s) var(--s-motion-easing-emphasized, cubic-bezier(.2, 0, 0, 1))}:host([selected=true]) .icon{background:var(--s-color-secondary-container, #CFE6F1)}::slotted(*){flex-shrink:0}::slotted(svg){color:var(--s-color-on-surface-variant, #40484C);fill:currentColor;width:24px;height:24px}:host([selected=true]) ::slotted(:is(svg,s-icon)){color:currentColor}::slotted([slot=badge]){position:absolute;right:4px;top:0}::slotted([slot=text]){margin-top:4px}`\nconst itemTemplate = `<s-ripple attached=\"true\" class=\"icon\" part=\"icon\"><slot name=\"icon\"></slot><slot name=\"badge\"></slot></s-ripple><slot name=\"text\"></slot>`\nexport class NavigationItem extends useElement({\n    style: itemStyle,\n    template: itemTemplate,\n    props: itemProps,\n    setup() {\n        this.addEventListener('click', () => {\n            if (this.selected)\n                return;\n            if (!(this.parentNode instanceof Navigation))\n                return;\n            this.dispatchEvent(new Event(`${name}:select`, { bubbles: true }));\n        });\n        return {\n            selected: () => {\n                if (!(this.parentNode instanceof Navigation))\n                    return;\n                this.dispatchEvent(new Event(`${name}:update`, { bubbles: true }));\n            }\n        };\n    }\n}) {\n}\nNavigation.define(name);\nNavigationItem.define(itemName);\n"],
  "mappings": "AAAA,OAAS,cAAAA,EAAY,YAAAC,MAAgB,oBACrC,OAAS,UAAAC,MAAc,yBACvB,MAAO,cACP,MAAMC,EAAO,eACPC,EAAQH,EAAS,CACnB,KAAM,CAAC,SAAU,MAAM,EACvB,OAAQ,EACZ,CAAC,EACKI,EAAQ,0tBACRC,EAAW,4EACV,MAAMC,UAAmBP,EAAW,CACvC,MAAAK,EAAO,SAAAC,EAAU,MAAAF,EACjB,MAAMI,EAAY,CACd,MAAMC,EAAOD,EAAW,cAAc,OAAO,EACvCE,EAAS,IAAIR,EAAO,CAAE,QAAS,KAAM,MAAOS,EAAgB,KAAAF,CAAK,CAAC,EACxE,MAAO,CACH,OAAQ,CACJ,IAAI,SAAU,CACV,OAAOC,EAAO,IAClB,EACA,IAAI,eAAgB,CAChB,OAAOA,EAAO,aAClB,CACJ,EACA,MAAO,CACH,IAAK,IAAMA,EAAO,MAClB,IAAME,GAAUF,EAAO,MAAQE,CACnC,CACJ,CACJ,CACJ,CAAC,CAAE,CACH,CACA,MAAMC,EAAW,oBACXC,EAAYb,EAAS,CACvB,SAAU,GACV,OAAQ,EACZ,CAAC,EACKc,EAAY,+iCACZC,EAAe,6IACd,MAAML,UAAuBX,EAAW,CAC3C,MAAOe,EACP,SAAUC,EACV,MAAOF,EACP,OAAQ,CACJ,YAAK,iBAAiB,QAAS,IAAM,CAC7B,KAAK,UAEH,KAAK,sBAAsBP,GAEjC,KAAK,cAAc,IAAI,MAAM,GAAGJ,CAAI,UAAW,CAAE,QAAS,EAAK,CAAC,CAAC,CACrE,CAAC,EACM,CACH,SAAU,IAAM,CACN,KAAK,sBAAsBI,GAEjC,KAAK,cAAc,IAAI,MAAM,GAAGJ,CAAI,UAAW,CAAE,QAAS,EAAK,CAAC,CAAC,CACrE,CACJ,CACJ,CACJ,CAAC,CAAE,CACH,CACAI,EAAW,OAAOJ,CAAI,EACtBQ,EAAe,OAAOE,CAAQ",
  "names": ["useElement", "useProps", "Select", "name", "props", "style", "template", "Navigation", "shadowRoot", "slot", "select", "NavigationItem", "value", "itemName", "itemProps", "itemStyle", "itemTemplate"]
}
