{
  "version": 3,
  "sources": ["circular-progress.js"],
  "sourcesContent": ["import { useElement, useProps } from './core/element.js';\nconst name = 's-circular-progress';\nconst props = useProps({\n    indeterminate: false,\n    animated: false,\n    $max: 100,\n    $value: 0\n});\nconst style = `:host{display:inline-block;vertical-align:middle;position:relative;width:48px;aspect-ratio:1;-webkit-aspect-ratio:1;color:var(--s-color-primary, #006782)}:host([animated=true]) .known .block{transition-duration:var(--s-motion-duration-medium4, .4s);transition-timing-function:var(--s-motion-easing-emphasized, cubic-bezier(.2, 0, 0, 1));transition-name:stroke-dashoffset,transform}:host([indeterminate=true]) .known,.unknown{display:none}:host([indeterminate=true]) .unknown,.known{display:block}.container{width:100%;height:100%;border-radius:inherit;position:relative}svg{height:inherit;width:inherit;stroke:currentColor}circle{stroke-linecap:round;fill:none;stroke-dasharray:var(--dasharray)}.track{stroke:var(--s-color-secondary-container, #CFE6F1)}.unknown{animation:rotate 1568ms linear infinite}@keyframes stroke{0%{stroke-dashoffset:var(--dasharray)}50%{stroke-dashoffset:calc(var(--dasharray) / 4)}to{stroke-dashoffset:var(--dasharray)}}@keyframes stroke-rotate{0%{transform:rotate(0)}12.5%{transform:rotate(0)}25%{transform:rotate(270deg)}37.5%{transform:rotate(270deg)}50%{transform:rotate(540deg)}62.5%{transform:rotate(540deg)}75%{transform:rotate(810deg)}87.5%{transform:rotate(810deg)}to{transform:rotate(1080deg)}to{transform:rotate(1080deg)}}@keyframes rotate{0%{transform:rotate(0)}to{transform:rotate(360deg)}}`\nconst size = 48;\nconst borderWidth = 4;\nconst dasharray = (size - borderWidth) * Math.PI;\nconst template = `<div class=\"container known\"><svg viewBox=\"0 0 48 48\" style=\"transform: rotate(-90deg);--dasharray: ${dasharray}px;\"><circle class=\"track block\" cx=\"${size / 2}\" cy=\"${size / 2}\" r=\"${(size - borderWidth) / 2}\" style=\"stroke-width: ${borderWidth}px\"/><circle class=\"indicator block\" cx=\"${size / 2}\" cy=\"${size / 2}\" r=\"${(size - borderWidth) / 2}\" style=\"stroke-dashoffset: ${dasharray}px;stroke-width: ${borderWidth}px\"/></svg></div><div class=\"container unknown\"><svg viewBox=\"0 0 48 48\" style=\"animation: stroke-rotate 5.2s ease-in-out infinite;--dasharray: ${dasharray}px;\"><circle transform=\"rotate(-90, ${size / 2}, ${size / 2})\" cx=\"${size / 2}\" cy=\"${size / 2}\" r=\" ${(size - borderWidth) / 2}\" style=\"animation: stroke 1.3s ease-in-out infinite;stroke-width: ${borderWidth}px\"></circle></svg></div>`\nexport class CircularProgress extends useElement({\n    style, template, props,\n    setup(shadowRoot) {\n        const track = shadowRoot.querySelector('.known .track');\n        const indicator = shadowRoot.querySelector('.known .indicator');\n        const update = () => {\n            const percentage = Math.min(this.value, this.max) / this.max * 100;\n            const value = dasharray - (dasharray * (percentage / 100));\n            const deg = percentage / 100 * 360;\n            track.style.strokeDashoffset = `${percentage === 0 ? 0 : Math.min((dasharray + 16) - value, dasharray)}px`;\n            track.setAttribute('transform', `rotate(${deg + 20}, ${size / 2}, ${size / 2})`);\n            indicator.style.strokeDashoffset = `${value}px`;\n        };\n        return { max: update, value: update };\n    }\n}) {\n}\nCircularProgress.define(name);\n"],
  "mappings": "AAAA,OAAS,cAAAA,EAAY,YAAAC,MAAgB,oBACrC,MAAMC,EAAO,sBACPC,EAAQF,EAAS,CACnB,cAAe,GACf,SAAU,GACV,KAAM,IACN,OAAQ,CACZ,CAAC,EACKG,EAAQ,ozCACRC,EAAO,GACPC,EAAc,EACdC,GAAaF,EAAOC,GAAe,KAAK,GACxCE,EAAW,uGAAuGD,CAAS,wCAAwCF,EAAO,CAAC,SAASA,EAAO,CAAC,SAASA,EAAOC,GAAe,CAAC,0BAA0BA,CAAW,4CAA4CD,EAAO,CAAC,SAASA,EAAO,CAAC,SAASA,EAAOC,GAAe,CAAC,+BAA+BC,CAAS,oBAAoBD,CAAW,mJAAmJC,CAAS,uCAAuCF,EAAO,CAAC,KAAKA,EAAO,CAAC,UAAUA,EAAO,CAAC,SAASA,EAAO,CAAC,UAAUA,EAAOC,GAAe,CAAC,sEAAsEA,CAAW,4BACzxB,MAAMG,UAAyBT,EAAW,CAC7C,MAAAI,EAAO,SAAAI,EAAU,MAAAL,EACjB,MAAMO,EAAY,CACd,MAAMC,EAAQD,EAAW,cAAc,eAAe,EAChDE,EAAYF,EAAW,cAAc,mBAAmB,EACxDG,EAAS,IAAM,CACjB,MAAMC,EAAa,KAAK,IAAI,KAAK,MAAO,KAAK,GAAG,EAAI,KAAK,IAAM,IACzDC,EAAQR,EAAaA,GAAaO,EAAa,KAC/CE,EAAMF,EAAa,IAAM,IAC/BH,EAAM,MAAM,iBAAmB,GAAGG,IAAe,EAAI,EAAI,KAAK,IAAKP,EAAY,GAAMQ,EAAOR,CAAS,CAAC,KACtGI,EAAM,aAAa,YAAa,UAAUK,EAAM,EAAE,KAAKX,EAAO,CAAC,KAAKA,EAAO,CAAC,GAAG,EAC/EO,EAAU,MAAM,iBAAmB,GAAGG,CAAK,IAC/C,EACA,MAAO,CAAE,IAAKF,EAAQ,MAAOA,CAAO,CACxC,CACJ,CAAC,CAAE,CACH,CACAJ,EAAiB,OAAOP,CAAI",
  "names": ["useElement", "useProps", "name", "props", "style", "size", "borderWidth", "dasharray", "template", "CircularProgress", "shadowRoot", "track", "indicator", "update", "percentage", "value", "deg"]
}
