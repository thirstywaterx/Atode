{
  "version": 3,
  "sources": ["page.js"],
  "sourcesContent": ["import { useElement, useProps } from './core/element.js';\nimport { convertCSSDuration } from './core/utils/CSSUtils.js';\nconst name = 's-page';\nconst props = useProps({\n    theme: ['light', 'auto', 'dark']\n});\nconst style = `:host{display:flow-root;height:100%;font-family:Roboto,system-ui;color:var(--s-color-on-background);background:var(--s-color-background);--s-color-scrim: #000000;--s-color-primary: #006782;--s-color-on-primary: #ffffff;--s-color-primary-container: #BAEAFF;--s-color-on-primary-container: #004D62;--s-color-secondary: #4C616B;--s-color-on-secondary: #ffffff;--s-color-secondary-container: #CFE6F1;--s-color-on-secondary-container: #354A53;--s-color-tertiary: #5C5B7E;--s-color-on-tertiary: #ffffff;--s-color-tertiary-container: #E2DFFF;--s-color-on-tertiary-container: #444465;--s-color-error: #BA1A1A;--s-color-on-error: #ffffff;--s-color-error-container: #FFDAD6;--s-color-on-error-container: #93000A;--s-color-background: #F8F9FB;--s-color-on-background: #191C1E;--s-color-outline: #70787D;--s-color-outline-variant: #C0C8CC;--s-color-surface: #F8F9FB;--s-color-on-surface: #191C1E;--s-color-surface-variant: #DCE4E8;--s-color-on-surface-variant: #40484C;--s-color-inverse-surface: #2E3132;--s-color-inverse-on-surface: #EFF1F3;--s-color-inverse-primary: #60D4FE;--s-color-surface-container: #ECEEF0;--s-color-surface-container-high: #E7E8EA;--s-color-surface-container-highest: #E1E3E4;--s-color-surface-container-low: #F2F4F5;--s-color-surface-container-lowest: #FFFFFF;--s-color-success: #006d43;--s-color-on-success: #ffffff;--s-color-success-container: #92f7bc;--s-color-on-success-container: #002111;--s-color-warning: #6f5d00;--s-color-on-warning: #ffffff;--s-color-warning-container: #ffe169;--s-color-on-warning-container: #221b00;--s-color-dark-primary: #60D4FE;--s-color-dark-on-primary: #003545;--s-color-dark-primary-container: #004D62;--s-color-dark-on-primary-container: #BAEAFF;--s-color-dark-secondary: #B4CAD5;--s-color-dark-on-secondary: #1E333C;--s-color-dark-secondary-container: #354A53;--s-color-dark-on-secondary-container: #CFE6F1;--s-color-dark-tertiary: #C4C3EA;--s-color-dark-on-tertiary: #2D2D4D;--s-color-dark-tertiary-container: #444465;--s-color-dark-on-tertiary-container: #E2DFFF;--s-color-dark-error: #FFB4AB;--s-color-dark-on-error: #690005;--s-color-dark-error-container: #93000A;--s-color-dark-on-error-container: #FFDAD6;--s-color-dark-background: #111415;--s-color-dark-on-background: #E1E3E4;--s-color-dark-outline: #8A9296;--s-color-dark-outline-variant: #40484C;--s-color-dark-surface: #111415;--s-color-dark-on-surface: #E1E3E4;--s-color-dark-surface-variant: #40484C;--s-color-dark-on-surface-variant: #C0C8CC;--s-color-dark-inverse-surface: #E1E3E4;--s-color-dark-inverse-on-surface: #2E3132;--s-color-dark-inverse-primary: #006782;--s-color-dark-surface-container: #1D2022;--s-color-dark-surface-container-high: #272A2C;--s-color-dark-surface-container-highest: #323537;--s-color-dark-surface-container-low: #191C1E;--s-color-dark-surface-container-lowest: #0C0F10;--s-color-dark-success: #76daa1;--s-color-dark-on-success: #003920;--s-color-dark-success-container: #005231;--s-color-dark-on-success-container: #92f7bc;--s-color-dark-warning: #e2c54b;--s-color-dark-on-warning: #3a3000;--s-color-dark-warning-container: #544600;--s-color-dark-on-warning-container: #ffe169;--s-elevation-level1: 0 3px 1px -2px rgba(0, 0, 0, .2), 0 2px 2px 0 rgba(0, 0, 0, .14), 0 1px 5px 0 rgba(0, 0, 0, .12);--s-elevation-level2: 0 2px 4px -1px rgba(0, 0, 0, .2), 0 4px 5px 0 rgba(0, 0, 0, .14), 0 1px 10px 0 rgba(0, 0, 0, .12);--s-elevation-level3: 0 5px 5px -3px rgba(0, 0, 0, .2), 0 8px 10px 1px rgba(0, 0, 0, .14), 0 3px 14px 2px rgba(0, 0, 0, .12);--s-elevation-level4: 0 8px 10px -5px rgba(0, 0, 0, .2), 0 16px 24px 2px rgba(0, 0, 0, .14), 0 6px 30px 5px rgba(0, 0, 0, .12);--s-elevation-level5: 0 10px 14px -6px rgba(0, 0, 0, .2), 0 22px 35px 3px rgba(0, 0, 0, .14), 0 8px 42px 7px rgba(0, 0, 0, .12);--s-motion-duration-Short1: 50ms;--s-motion-duration-short2: .1s;--s-motion-duration-short3: .15s;--s-motion-duration-short4: .2s;--s-motion-duration-medium1: .25s;--s-motion-duration-medium2: .3s;--s-motion-duration-medium3: .35s;--s-motion-duration-medium4: .4s;--s-motion-duration-long1: .45s;--s-motion-duration-long2: .5s;--s-motion-duration-long3: .55s;--s-motion-duration-long4: .6s;--s-motion-duration-extra-long1: .7s;--s-motion-duration-extra-long2: .8s;--s-motion-duration-extra-long3: .9s;--s-motion-duration-extra-long4: 1s;--s-motion-easing-emphasized: cubic-bezier(.2, 0, 0, 1);--s-motion-easing-emphasized-decelerate: cubic-bezier(.05, .7, .1, 1);--s-motion-easing-emphasized-accelerate: cubic-bezier(.3, 0, .8, .15);--s-motion-easing-standard: cubic-bezier(.2, 0, 0, 1);--s-motion-easing-standard-decelerate: cubic-bezier(0, 0, 0, 1);--s-motion-easing-standard-accelerate: cubic-bezier(.3, 0, 1, 1)}:host([dark]){--s-color-primary: var(--s-color-dark-primary) !important;--s-color-on-primary: var(--s-color-dark-on-primary) !important;--s-color-primary-container: var(--s-color-dark-primary-container) !important;--s-color-on-primary-container: var(--s-color-dark-on-primary-container) !important;--s-color-secondary: var(--s-color-dark-secondary) !important;--s-color-on-secondary: var(--s-color-dark-on-secondary) !important;--s-color-secondary-container: var(--s-color-dark-secondary-container) !important;--s-color-on-secondary-container: var(--s-color-dark-on-secondary-container) !important;--s-color-tertiary: var(--s-color-dark-tertiary) !important;--s-color-on-tertiary: var(--s-color-dark-on-tertiary) !important;--s-color-tertiary-container: var(--s-color-dark-tertiary-container) !important;--s-color-on-tertiary-container: var(--s-color-dark-on-tertiary-container) !important;--s-color-error: var(--s-color-dark-error) !important;--s-color-on-error: var(--s-color-dark-on-error) !important;--s-color-error-container: var(--s-color-dark-error-container) !important;--s-color-on-error-container: var(--s-color-dark-on-error-container) !important;--s-color-background: var(--s-color-dark-background) !important;--s-color-on-background: var(--s-color-dark-on-background) !important;--s-color-outline: var(--s-color-dark-outline) !important;--s-color-outline-variant: var(--s-color-dark-outline-variant) !important;--s-color-surface: var(--s-color-dark-surface) !important;--s-color-on-surface: var(--s-color-dark-on-surface) !important;--s-color-surface-variant: var(--s-color-dark-surface-variant) !important;--s-color-on-surface-variant: var(--s-color-dark-on-surface-variant) !important;--s-color-inverse-surface: var(--s-color-dark-inverse-surface) !important;--s-color-inverse-on-surface: var(--s-color-dark-inverse-on-surface) !important;--s-color-inverse-primary: var(--s-color-dark-inverse-primary) !important;--s-color-surface-container: var(--s-color-dark-surface-container) !important;--s-color-surface-container-high: var(--s-color-dark-surface-container-high) !important;--s-color-surface-container-highest: var(--s-color-dark-surface-container-highest) !important;--s-color-surface-container-low: var(--s-color-dark-surface-container-low) !important;--s-color-surface-container-lowest: var(--s-color-dark-surface-container-lowest) !important;--s-color-success: var(--s-color-dark-success) !important;--s-color-on-success: var(--s-color-dark-on-success) !important;--s-color-success-container: var(--s-color-dark-success-container) !important;--s-color-on-success-container: var(--s-color-dark-on-success-container) !important;--s-color-warning: var(--s-color-dark-warning) !important;--s-color-on-warning: var(--s-color-dark-on-warning) !important;--s-color-warning-container: var(--s-color-dark-warning-container) !important;--s-color-on-warning-container: var(--s-color-dark-on-warning-container) !important}`\nconst template = `<slot></slot>`\nconst viewTransitionStyle = document.createElement('style');\nviewTransitionStyle.textContent = `::view-transition-old(root),::view-transition-new(root) { animation: none; mix-blend-mode: normal}`;\nexport class Page extends useElement({\n    style, template, props,\n    setup() {\n        const computedStyle = getComputedStyle(this);\n        const darker = matchMedia('(prefers-color-scheme: dark)');\n        const getAnimateOptions = () => {\n            const easing = computedStyle.getPropertyValue('--s-motion-easing-standard-accelerate') || \"cubic-bezier(0.3, 0, 1, 1)\" /* Theme.motionEasingStandardAccelerate */;\n            const duration = computedStyle.getPropertyValue('--s-motion-duration-long4') || \"600ms\" /* Theme.motionDurationLong4 */;\n            return { easing: easing, duration: convertCSSDuration(duration) };\n        };\n        const isDark = () => {\n            if (this.theme === 'auto')\n                return darker.matches;\n            if (this.theme === 'dark')\n                return true;\n            return false;\n        };\n        const toggle = (theme, trigger) => {\n            return new Promise((resolve) => {\n                if (this.theme === theme)\n                    return;\n                const isDark = darker.matches;\n                const getTheme = (theme) => theme === 'auto' ? (isDark ? 'dark' : 'light') : theme;\n                const oldTheme = getTheme(this.theme);\n                const newTheme = getTheme(theme);\n                if (oldTheme === newTheme || !document.startViewTransition) {\n                    this.theme = theme;\n                    return resolve();\n                }\n                const width = innerWidth;\n                const height = innerHeight;\n                const keyframes = { clipPath: [`circle(0px at 50% ${height / 2}px)`, `circle(${Math.sqrt(width ** 2 + height ** 2) / 2}px at 50% ${height / 2}px)`] };\n                if (trigger && trigger.isConnected) {\n                    const { left, top } = trigger.getBoundingClientRect();\n                    const x = left + trigger.offsetWidth / 2;\n                    const y = top + trigger.offsetHeight / 2;\n                    const twoW = Math.max(width - x, x);\n                    const twoH = Math.max(height - y, y);\n                    const size = Math.sqrt(twoW ** 2 + twoH ** 2);\n                    keyframes.clipPath[0] = `circle(0px at ${x}px ${y}px)`;\n                    keyframes.clipPath[1] = `circle(${size}px at ${x}px ${y}px)`;\n                }\n                const transition = document.startViewTransition(() => {\n                    this.theme = theme;\n                    document.head.appendChild(viewTransitionStyle);\n                });\n                transition.ready.then(async () => {\n                    const animation = document.documentElement.animate(keyframes, { ...getAnimateOptions(), pseudoElement: '::view-transition-new(root)' });\n                    resolve(animation);\n                    await transition.finished;\n                    viewTransitionStyle.remove();\n                });\n            });\n        };\n        return {\n            expose: {\n                toggle,\n                get isDark() {\n                    return isDark();\n                },\n            },\n            theme: (value) => {\n                if (value === 'light')\n                    return this.removeAttribute('dark');\n                if (value === 'dark')\n                    return this.setAttribute('dark', '');\n                const change = () => {\n                    darker.matches ? this.setAttribute('dark', '') : this.removeAttribute('dark');\n                    this.dispatchEvent(new Event('change'));\n                };\n                darker.onchange = change;\n                change();\n            }\n        };\n    }\n}) {\n}\nPage.define(name);\n"],
  "mappings": "AAAA,OAAS,cAAAA,EAAY,YAAAC,MAAgB,oBACrC,OAAS,sBAAAC,MAA0B,2BACnC,MAAMC,EAAO,SACPC,EAAQH,EAAS,CACnB,MAAO,CAAC,QAAS,OAAQ,MAAM,CACnC,CAAC,EACKI,EAAQ,06OACRC,EAAW,gBACXC,EAAsB,SAAS,cAAc,OAAO,EAC1DA,EAAoB,YAAc,qGAC3B,MAAMC,UAAaR,EAAW,CACjC,MAAAK,EAAO,SAAAC,EAAU,MAAAF,EACjB,OAAQ,CACJ,MAAMK,EAAgB,iBAAiB,IAAI,EACrCC,EAAS,WAAW,8BAA8B,EAClDC,EAAoB,IAAM,CAC5B,MAAMC,EAASH,EAAc,iBAAiB,uCAAuC,GAAK,6BACpFI,EAAWJ,EAAc,iBAAiB,2BAA2B,GAAK,QAChF,MAAO,CAAE,OAAQG,EAAQ,SAAUV,EAAmBW,CAAQ,CAAE,CACpE,EACMC,EAAS,IACP,KAAK,QAAU,OACRJ,EAAO,QACd,KAAK,QAAU,OAyCvB,MAAO,CACH,OAAQ,CACJ,OAvCO,CAACK,EAAOC,IACZ,IAAI,QAASC,GAAY,CAC5B,GAAI,KAAK,QAAUF,EACf,OACJ,MAAMD,EAASJ,EAAO,QAChBQ,EAAYH,GAAUA,IAAU,OAAUD,EAAS,OAAS,QAAWC,EACvEI,EAAWD,EAAS,KAAK,KAAK,EAC9BE,EAAWF,EAASH,CAAK,EAC/B,GAAII,IAAaC,GAAY,CAAC,SAAS,oBACnC,YAAK,MAAQL,EACNE,EAAQ,EAEnB,MAAMI,EAAQ,WACRC,EAAS,YACTC,EAAY,CAAE,SAAU,CAAC,qBAAqBD,EAAS,CAAC,MAAO,UAAU,KAAK,KAAKD,GAAS,EAAIC,GAAU,CAAC,EAAI,CAAC,aAAaA,EAAS,CAAC,KAAK,CAAE,EACpJ,GAAIN,GAAWA,EAAQ,YAAa,CAChC,KAAM,CAAE,KAAAQ,EAAM,IAAAC,CAAI,EAAIT,EAAQ,sBAAsB,EAC9CU,EAAIF,EAAOR,EAAQ,YAAc,EACjCW,EAAIF,EAAMT,EAAQ,aAAe,EACjCY,EAAO,KAAK,IAAIP,EAAQK,EAAGA,CAAC,EAC5BG,EAAO,KAAK,IAAIP,EAASK,EAAGA,CAAC,EAC7BG,EAAO,KAAK,KAAKF,GAAQ,EAAIC,GAAQ,CAAC,EAC5CN,EAAU,SAAS,CAAC,EAAI,iBAAiBG,CAAC,MAAMC,CAAC,MACjDJ,EAAU,SAAS,CAAC,EAAI,UAAUO,CAAI,SAASJ,CAAC,MAAMC,CAAC,KAC3D,CACA,MAAMI,EAAa,SAAS,oBAAoB,IAAM,CAClD,KAAK,MAAQhB,EACb,SAAS,KAAK,YAAYR,CAAmB,CACjD,CAAC,EACDwB,EAAW,MAAM,KAAK,SAAY,CAC9B,MAAMC,EAAY,SAAS,gBAAgB,QAAQT,EAAW,CAAE,GAAGZ,EAAkB,EAAG,cAAe,6BAA8B,CAAC,EACtIM,EAAQe,CAAS,EACjB,MAAMD,EAAW,SACjBxB,EAAoB,OAAO,CAC/B,CAAC,CACL,CAAC,EAKG,IAAI,QAAS,CACT,OAAOO,EAAO,CAClB,CACJ,EACA,MAAQmB,GAAU,CACd,GAAIA,IAAU,QACV,OAAO,KAAK,gBAAgB,MAAM,EACtC,GAAIA,IAAU,OACV,OAAO,KAAK,aAAa,OAAQ,EAAE,EACvC,MAAMC,EAAS,IAAM,CACjBxB,EAAO,QAAU,KAAK,aAAa,OAAQ,EAAE,EAAI,KAAK,gBAAgB,MAAM,EAC5E,KAAK,cAAc,IAAI,MAAM,QAAQ,CAAC,CAC1C,EACAA,EAAO,SAAWwB,EAClBA,EAAO,CACX,CACJ,CACJ,CACJ,CAAC,CAAE,CACH,CACA1B,EAAK,OAAOL,CAAI",
  "names": ["useElement", "useProps", "convertCSSDuration", "name", "props", "style", "template", "viewTransitionStyle", "Page", "computedStyle", "darker", "getAnimateOptions", "easing", "duration", "isDark", "theme", "trigger", "resolve", "getTheme", "oldTheme", "newTheme", "width", "height", "keyframes", "left", "top", "x", "y", "twoW", "twoH", "size", "transition", "animation", "value", "change"]
}
