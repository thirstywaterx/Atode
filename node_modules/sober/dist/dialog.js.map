{
  "version": 3,
  "sources": ["dialog.js"],
  "sourcesContent": ["import { useElement, useProps, useEvents } from './core/element.js';\nimport { convertCSSDuration } from './core/utils/CSSUtils.js';\nimport './scroll-view.js';\nconst name = 's-dialog';\nconst props = useProps({\n    showed: false,\n    size: ['standard', 'full']\n});\nconst events = useEvents({\n    show: (CustomEvent),\n    showed: Event,\n    close: (CustomEvent),\n    closed: Event\n});\nconst style = `:host{display:inline-block;vertical-align:middle}dialog{inset:0;width:100%;height:100%;background:none;border:none;padding:0;max-width:none;max-height:none;outline:none;color:inherit}dialog::backdrop{background:none}.wrapper{width:100%;height:100%;display:flex;justify-content:center;align-items:center;position:relative;pointer-events:none}.scrim{position:absolute;inset:0;width:100%;height:100%;opacity:0;backdrop-filter:saturate(180%) blur(2px)}.scrim:before{content:\"\";display:block;width:100%;height:100%;opacity:.75;background:var(--s-color-scrim, #000000)}dialog.show .scrim{opacity:1}.container,::slotted([slot=custom]){max-width:calc(100% - 48px);max-height:calc(100% - 48px);pointer-events:auto;position:relative;border-radius:28px;display:flex;outline:none;flex-direction:column;overflow:hidden;transition-timing-function:ease-out;box-shadow:var(--s-elevation-level5, 0 10px 14px -6px rgba(0, 0, 0, .2), 0 22px 35px 3px rgba(0, 0, 0, .14), 0 8px 42px 7px rgba(0, 0, 0, .12));background:var(--s-color-surface-container-high, #E7E8EA)}:host([size=full]) .container{width:100%;height:100%;border-radius:0;max-width:none;max-height:none}:host([size=full]) ::slotted(:is([slot=text],:not([slot]))){max-width:100%;width:auto}::slotted([slot=headline]){padding:24px 24px 0;font-size:1.5rem;line-height:22px;font-weight:600;color:var(--s-color-on-surface, #191C1E);flex-shrink:0}.text{user-select:text;-webkit-user-select:text;flex-grow:1}::slotted([slot=text]){margin:16px 24px;max-width:calc(100% - 48px);line-height:22px}::slotted(:is(:not([slot]),[slot=text])){width:375px}::slotted(:not([slot])){max-width:100%}.action{display:flex;justify-content:flex-end;padding:0 14px;flex-shrink:0}::slotted([slot=action]){min-width:72px;margin:16px 2px;display:inline-flex;align-items:center;padding:0 24px;color:var(--s-color-primary, #006782);box-sizing:border-box;height:40px;font-size:.875rem;cursor:pointer}`\nconst template = `<slot name=\"trigger\"></slot><dialog part=\"popup\"><div class=\"scrim\" part=\"scrim\"></div><slot name=\"custom\" class=\"wrapper\" part=\"wrapper\"><div class=\"container\" part=\"container\"><slot name=\"headline\"></slot><s-scroll-view class=\"text\" part=\"view\"><slot></slot><slot name=\"text\"></slot></s-scroll-view><div class=\"action\" part=\"action\"><slot name=\"action\"></slot></div></div></slot></dialog>`\nconst builder = (options) => {\n    let root = document.body;\n    const dialog = new Dialog();\n    const page = document.body.firstElementChild;\n    if (page && page.tagName === 'S-PAGE')\n        root = page;\n    if (typeof options === 'string') {\n        const text = document.createElement('div');\n        text.slot = 'text';\n        text.textContent = options;\n        dialog.appendChild(text);\n    }\n    else {\n        if (options.root)\n            root = options.root;\n        if (options.headline) {\n            const headline = document.createElement('div');\n            headline.slot = 'headline';\n            headline.textContent = options.headline;\n            dialog.appendChild(headline);\n        }\n        if (options.text) {\n            const text = document.createElement('div');\n            text.slot = 'text';\n            text.textContent = options.text;\n            dialog.appendChild(text);\n        }\n        if (options.view) {\n            typeof options.view === 'function' ? options.view(dialog) : dialog.appendChild(options.view);\n        }\n        const actions = options.actions ?? [];\n        for (const item of Array.isArray(actions) ? actions : [actions]) {\n            const action = document.createElement('s-button');\n            action.slot = 'action';\n            action.type = 'text';\n            action.textContent = item.text;\n            if (item.click)\n                action.onclick = item.click;\n            dialog.appendChild(action);\n        }\n    }\n    dialog.showed = true;\n    dialog.addEventListener('closed', () => root.removeChild(dialog));\n    root.appendChild(dialog);\n    return dialog;\n};\nexport class Dialog extends useElement({\n    style, template, props, events, methods: { builder },\n    setup(shadowRoot) {\n        const dialog = shadowRoot.querySelector('dialog');\n        const scrim = shadowRoot.querySelector('.scrim');\n        const wrapper = shadowRoot.querySelector('.wrapper');\n        const containerStyle = getComputedStyle(this);\n        const getAnimateOptions = () => {\n            const easing = containerStyle.getPropertyValue('--s-motion-easing-standard') || \"cubic-bezier(0.2, 0, 0, 1.0)\" /* Theme.motionEasingStandard */;\n            const duration = containerStyle.getPropertyValue('--s-motion-duration-medium4') || \"400ms\" /* Theme.motionDurationMedium4 */;\n            return { easing: easing, duration: convertCSSDuration(duration) };\n        };\n        shadowRoot.querySelector('slot[name=trigger]').onclick = () => {\n            if (this.showed || !this.dispatchEvent(new CustomEvent('show', { cancelable: true, detail: { source: 'TRIGGER' } })))\n                return console.log('\u62D2\u7EDD');\n            this.showed = true;\n        };\n        const onClose = (source) => {\n            if (!this.showed || !this.dispatchEvent(new CustomEvent('close', { cancelable: true, detail: { source } })))\n                return;\n            this.showed = false;\n        };\n        shadowRoot.querySelector('.scrim').onclick = () => onClose('SCRIM');\n        shadowRoot.querySelector('slot[name=action]').onclick = () => onClose('ACTION');\n        const show = () => {\n            if (!this.isConnected || dialog.open)\n                return;\n            const animateOptions = getAnimateOptions();\n            dialog.showModal();\n            dialog.classList.add('show');\n            scrim.animate({ opacity: [0, 1] }, animateOptions);\n            const animation = wrapper.animate({ transform: ['scale(.9)', 'scale(1)'], opacity: [0, 1] }, animateOptions);\n            animation.addEventListener('finish', () => this.dispatchEvent(new Event('showed')));\n        };\n        const close = () => {\n            if (!this.isConnected || !dialog.open)\n                return;\n            const animateOptions = getAnimateOptions();\n            scrim.animate({ opacity: [1, 0] }, animateOptions);\n            const animation = wrapper.animate({ transform: ['scale(1)', 'scale(.9)'], opacity: [1, 0] }, animateOptions);\n            animation.addEventListener('finish', () => {\n                dialog.close();\n                dialog.classList.remove('show');\n                this.dispatchEvent(new Event('closed'));\n            });\n        };\n        return {\n            onMounted: () => this.showed && !dialog.open && show(),\n            showed: (value) => value ? show() : close()\n        };\n    }\n}) {\n}\nDialog.define(name);\n"],
  "mappings": "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",
  "names": ["useElement", "useProps", "useEvents", "convertCSSDuration", "name", "props", "events", "style", "template", "builder", "options", "root", "dialog", "Dialog", "page", "text", "headline", "actions", "item", "action", "shadowRoot", "scrim", "wrapper", "containerStyle", "getAnimateOptions", "easing", "duration", "onClose", "source", "show", "animateOptions", "close", "value"]
}
