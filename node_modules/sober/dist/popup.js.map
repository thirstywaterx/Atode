{
  "version": 3,
  "sources": ["popup.js"],
  "sourcesContent": ["import { useElement, useProps, useEvents } from './core/element.js';\nimport { convertCSSDuration } from './core/utils/CSSUtils.js';\nconst name = 's-popup';\nconst props = useProps({\n    align: ['center', 'left', 'right']\n});\nconst events = useEvents({\n    show: Event,\n    showed: Event,\n    closed: Event\n});\nconst style = `:host{display:inline-block;vertical-align:middle;text-align:left}dialog{inset:0;width:100%;height:100%;background:none;border:none;padding:0;max-width:none;max-height:none;position:relative;overflow:hidden;color:inherit;outline:none}dialog::backdrop{background:none}.scrim{position:absolute;inset:0;width:100%;height:100%}.container{display:block;position:absolute;max-width:100%;max-height:100%;width:fit-content;height:fit-content;outline:none}::slotted(:not([slot])){border-radius:4px;max-width:inherit;max-height:inherit;box-shadow:var(--s-elevation-level2, 0 2px 4px -1px rgba(0, 0, 0, .2), 0 4px 5px 0 rgba(0, 0, 0, .14), 0 1px 10px 0 rgba(0, 0, 0, .12));background:var(--s-color-surface-container, #ECEEF0)}`\nconst template = `<slot name=\"trigger\"></slot><dialog class=\"popup\" part=\"popup\"><div class=\"scrim\" part=\"scrim\"></div><slot class=\"container\" part=\"container\"></slot></dialog>`\nconst getPosition = (rect, cw, ch, align) => {\n    const position = { top: 0, left: 0, origin: [] };\n    //\u5782\u76F4\n    const centered = align === 'center';\n    const top = centered ? rect.top + rect.height : rect.top;\n    const bottom = centered ? rect.top - ch : rect.top - ch + rect.height;\n    if (top + ch <= innerHeight) {\n        position.top = top;\n        position.origin[1] = 'top';\n    }\n    else if (bottom >= 0) {\n        position.top = bottom;\n        position.origin[1] = 'bottom';\n    }\n    else {\n        const y = (innerHeight - ch) / 2;\n        position.top = y;\n        position.origin[1] = `${rect.top + (rect.height / 2) - y}px`;\n    }\n    //\u6C34\u5E73\n    if (centered) {\n        position.left = rect.left - (cw - rect.width) / 2;\n        position.origin[0] = 'center';\n        if (position.left < 0) {\n            position.left = rect.left;\n            position.origin[0] = `${rect.width / 2}px`;\n        }\n        else if (position.left + cw > innerWidth) {\n            position.left = rect.left + rect.width - cw;\n            position.origin[0] = `${(cw - rect.width) + (rect.width / 2)}px`;\n        }\n    }\n    else {\n        const left = (call) => {\n            position.left = rect.left - cw;\n            position.origin[0] = 'right';\n            if (position.left < 0 && call)\n                call();\n        };\n        const right = (call) => {\n            position.left = rect.left + rect.width;\n            position.origin[0] = 'left';\n            if (position.left + cw > innerWidth && call)\n                call();\n        };\n        const center = () => {\n            const x = (innerWidth - cw) / 2;\n            position.left = x;\n            position.origin[0] = `${(rect.left + (rect.width / 2)) - x}px`;\n        };\n        align === 'left' ? left(() => right(center)) : right(() => left(center));\n    }\n    return position;\n};\nexport class Popup extends useElement({\n    style, template, props, events,\n    setup(shadowRoot) {\n        const dialog = shadowRoot.querySelector('dialog');\n        const container = shadowRoot.querySelector('.container');\n        const computedStyle = getComputedStyle(this);\n        const getAnimateOptions = () => {\n            const easing = computedStyle.getPropertyValue('--s-motion-easing-standard') || \"cubic-bezier(0.2, 0, 0, 1.0)\" /* Theme.motionEasingStandard */;\n            const duration = computedStyle.getPropertyValue('--s-motion-duration-medium4') || \"400ms\" /* Theme.motionDurationMedium4 */;\n            return { easing: easing, duration: convertCSSDuration(duration) };\n        };\n        const show = (option) => {\n            if (!this.isConnected || dialog.open)\n                return;\n            const position = { top: 0, left: 0, origin: [] };\n            dialog.showModal();\n            if (!this.dispatchEvent(new Event('show', { cancelable: true })))\n                return dialog.close();\n            container.style.maxHeight = `${innerHeight}px`;\n            container.style.maxWidth = `${innerWidth}px`;\n            const cw = container.offsetWidth;\n            const ch = container.offsetHeight;\n            if (!option || option instanceof HTMLElement) {\n                const el = option ?? this;\n                const rect = el.getBoundingClientRect();\n                const info = getPosition(rect, cw, ch, this.align);\n                position.top = info.top;\n                position.left = info.left;\n                position.origin = info.origin;\n            }\n            else {\n                position.top = option.y;\n                position.left = option.x;\n                position.origin = option.origin?.split(' ') ?? ['left', 'top'];\n                if (option.x + cw > innerWidth) {\n                    position.left = option.x - cw;\n                    position.origin[0] = 'right';\n                }\n                if (option.y + ch > innerHeight) {\n                    position.top = option.y - ch;\n                    position.origin[1] = 'bottom';\n                }\n            }\n            container.style.transformOrigin = position.origin.join(' ');\n            container.style.top = `${position.top}px`;\n            container.style.left = `${position.left}px`;\n            const animation = container.animate({ transform: ['scale(.9)', 'scale(1)'], opacity: [0, 1] }, getAnimateOptions());\n            this.setAttribute('showed', '');\n            animation.finished.then(() => this.dispatchEvent(new Event('showed')));\n        };\n        const close = () => {\n            if (!this.isConnected || !dialog.open || container.getAnimations().length > 0)\n                return;\n            if (!this.dispatchEvent(new Event('close', { cancelable: true })))\n                return;\n            const animation = container.animate({ transform: ['scale(1)', 'scale(.9)'], opacity: [1, 0] }, getAnimateOptions());\n            this.removeAttribute('showed');\n            animation.finished.then(() => {\n                dialog.close();\n                this.dispatchEvent(new Event('closed'));\n            });\n        };\n        const toggle = (option) => dialog.open ? close() : show(option);\n        shadowRoot.querySelector('slot[name=trigger]').addEventListener('click', () => show());\n        shadowRoot.querySelector('.scrim').addEventListener('pointerdown', close);\n        return {\n            expose: { show, toggle, close },\n            onMounted: () => addEventListener('resize', close),\n            onUnmounted: () => removeEventListener('resize', close)\n        };\n    }\n}) {\n}\nPopup.define(name);\n"],
  "mappings": "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",
  "names": ["useElement", "useProps", "useEvents", "convertCSSDuration", "name", "props", "events", "style", "template", "getPosition", "rect", "cw", "ch", "align", "position", "centered", "top", "bottom", "y", "left", "call", "right", "center", "x", "Popup", "shadowRoot", "dialog", "container", "computedStyle", "getAnimateOptions", "easing", "duration", "show", "option", "info", "animation", "close", "toggle"]
}
